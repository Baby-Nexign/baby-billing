{"uid":"48c9f907eedb6993","name":"Тест: BRT отклоняет CDR с невалидным форматом secondSubscriberMsisdn","fullName":"tests.test_invalid_second_msisdn#test_brt_rejects_cdr_with_invalid_format_second_msisdn","historyId":"7a86948f67d9a9dca82f4919961ed32f","time":{"start":1746967615212,"stop":1746967620247,"duration":5035},"description":"Проверяет, что BRT-сервис НЕ сохраняет CDR в 'cdr_record', если 'secondSubscriberMsisdn' имеет невалидный формат. Используется файл: test_data/invalid_format_second_msisdn.jsonl. Ожидается 0 записей в БД.","descriptionHtml":"<p>Проверяет, что BRT-сервис НЕ сохраняет CDR в 'cdr_record', если 'secondSubscriberMsisdn' имеет невалидный формат. Используется файл: test_data/invalid_format_second_msisdn.jsonl. Ожидается 0 записей в БД.</p>\n","status":"failed","statusMessage":"AssertionError: Ожидалось 0 записей в 'cdr_record' (из-за невалидного формата secondSubscriberMsisdn), но найдено 6. Записи: [{'id': 6, 'msisdn_one': '79334455667', 'msisdn_two': '', 'type': '01', 'start_time': datetime.datetime(2024, 5, 24, 15, 0), 'in_one_network': False, 'our_subscriber_id': 3, 'lasts': 300000000000}, {'id': 5, 'msisdn_one': '79996667755', 'msisdn_two': '7988111223A', 'type': '02', 'start_time': datetime.datetime(2024, 5, 24, 14, 0), 'in_one_network': False, 'our_subscriber_id': 2, 'lasts': 300000000000}, {'id': 4, 'msisdn_one': '79123456789', 'msisdn_two': 'ABCDEFGHIJK', 'type': '01', 'start_time': datetime.datetime(2024, 5, 24, 13, 0), 'in_one_network': False, 'our_subscriber_id': 1, 'lasts': 300000000000}, {'id': 3, 'msisdn_one': '79334455667', 'msisdn_two': '798877788990', 'type': '02', 'start_time': datetime.datetime(2024, 5, 24, 12, 0), 'in_one_network': False, 'our_subscriber_id': 3, 'lasts': 300000000000}, {'id': 2, 'msisdn_one': '79996667755', 'msisdn_two': '7988444556', 'type': '01', 'start_time': datetime.datetime(2024, 5, 24, 11, 0), 'in_one_network': False, 'our_subscriber_id': 2, 'lasts': 300000000000}, {'id': 1, 'msisdn_one': '79123456789', 'msisdn_two': '89881112233', 'type': '02', 'start_time': datetime.datetime(2024, 5, 24, 10, 0), 'in_one_network': False, 'our_subscriber_id': 1, 'lasts': 300000000000}]\nassert 6 == 0\n +  where 6 = len([{'id': 6, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79334455667', ...}, {'id': 5, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79996667755', ...}, {'id': 4, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79123456789', ...}, {'id': 3, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79334455667', ...}, {'id': 2, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79996667755', ...}, {'id': 1, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79123456789', ...}])","statusTrace":"db_connection = <psycopg.Connection [INTRANS] (host=localhost user=postgres database=brt) at 0x7fcc1094eb10>\n\n    @allure.epic(\"Обработка CDR в BRT\")\n    @allure.feature(\"Негативные сценарии - Валидация данных\")\n    @allure.story(\"Отклонение CDR с невалидным форматом secondSubscriberMsisdn\")\n    @allure.title(\"Тест: BRT отклоняет CDR с невалидным форматом secondSubscriberMsisdn\")\n    @allure.description(\n        f\"Проверяет, что BRT-сервис НЕ сохраняет CDR в 'cdr_record', если 'secondSubscriberMsisdn' имеет невалидный формат. \"\n        f\"Используется файл: {INVALID_FORMAT_SECOND_MSISDN_FILE}. Ожидается 0 записей в БД.\"\n    )\n    @allure.severity(allure.severity_level.CRITICAL) # Валидация идентификаторов абонентов критична\n    def test_brt_rejects_cdr_with_invalid_format_second_msisdn(\n        db_connection: psycopg.Connection\n    ):\n        \"\"\"\n        Проверяет, что BRT-сервис НЕ сохраняет CDR в 'cdr_record',\n        если 'secondSubscriberMsisdn' имеет невалидный формат.\n        firstSubscriberMsisdn, callType и даты предполагаются валидными.\n        Ожидается 0 записей в БД.\n        Тест полагается на корректность данных в тестовом файле.\n        \"\"\"\n        test_file_path = INVALID_FORMAT_SECOND_MSISDN_FILE\n        logger.info(f\"--- Тест: BRT должен отбросить CDR из {test_file_path} (невалидный формат secondSubscriberMsisdn) ---\")\n    \n        with allure.step(f\"1. Подготовка БД: создание/проверка абонентов {list(FIRST_MSISDNS_TO_PREPARE)} и очистка cdr_record\"):\n            msisdns_to_prepare_in_db = list(FIRST_MSISDNS_TO_PREPARE)\n            logger.info(f\"Подготовка БД: создание абонентов {msisdns_to_prepare_in_db} и очистка cdr_record...\")\n            subscriber_ids = prepare_database_for_cdr_test(db_connection, msisdns_to_prepare_in_db)\n            allure.attach(\n                json.dumps(subscriber_ids, indent=2, ensure_ascii=False),\n                name=\"ID подготовленных/проверенных абонентов\",\n                attachment_type=allure.attachment_type.JSON\n            )\n            logger.info(f\"БД подготовлена (только указанные firstSubscriberMsisdn). ID абонентов: {subscriber_ids}\")\n    \n        with allure.step(f\"2. Чтение CDR с невалидным secondSubscriberMsisdn из файла: {test_file_path}\"):\n            logger.info(f\"Чтение CDR из файла: {test_file_path}\")\n            cdr_list_to_send = read_cdr_file(test_file_path)\n            allure.attach(\n                json.dumps(cdr_list_to_send, indent=2, ensure_ascii=False),\n                name=f\"Содержимое файла {test_file_path} (с невалидным secondSubscriberMsisdn)\",\n                attachment_type=allure.attachment_type.JSON\n            )\n            assert cdr_list_to_send, f\"Тестовый файл {test_file_path} пуст или не найден.\"\n            logger.info(f\"Прочитано {len(cdr_list_to_send)} CDR для отправки (предполагается, что все с невалидным форматом secondSubscriberMsisdn).\")\n    \n        expected_records_in_db = 0\n        allure.attach(\n            str(expected_records_in_db),\n            name=\"Ожидаемое количество записей в БД после обработки\",\n            attachment_type=allure.attachment_type.TEXT\n        )\n    \n        with allure.step(f\"3. Отправка {len(cdr_list_to_send)} CDR (с невалидным secondSubscriberMsisdn) в RabbitMQ\"):\n            logger.info(f\"Отправка {len(cdr_list_to_send)} CDR в RabbitMQ...\")\n            allure.attach(\n                json.dumps(cdr_list_to_send, indent=2, ensure_ascii=False),\n                name=\"CDRы (с невалидным secondSubscriberMsisdn), отправленные в RabbitMQ\",\n                attachment_type=allure.attachment_type.JSON\n            )\n            send_status = send_cdr_list_to_rabbitmq(cdr_list_to_send)\n            assert send_status, \"Не удалось отправить CDR в RabbitMQ.\"\n    \n        processing_time_seconds = 5\n        with allure.step(f\"4. Ожидание {processing_time_seconds} сек. для обработки CDR сервисом BRT\"):\n            logger.info(f\"Ожидание {processing_time_seconds} сек. для обработки BRT...\")\n            time.sleep(processing_time_seconds)\n    \n        with allure.step(f\"5. Проверка отсутствия записей в таблице cdr_record (ожидается: {expected_records_in_db})\"):\n            logger.info(\"Получение записей из cdr_record...\")\n            created_records = get_cdr_records(db_connection, limit=len(cdr_list_to_send) + 5)\n            logger.info(f\"Фактически найдено в cdr_record: {len(created_records)}.\")\n    \n            allure.attach(\n                f\"Ожидалось записей: {expected_records_in_db}\\n\"\n                f\"Фактически найдено записей: {len(created_records)}\",\n                name=\"Сводка по записям в БД\",\n                attachment_type=allure.attachment_type.TEXT\n            )\n            if created_records: # Прикрепляем только если что-то неожиданно нашлось\n                allure.attach(\n                    json.dumps(created_records, indent=2, ensure_ascii=False, default=str),\n                    name=\"Записи, полученные из cdr_record (не ожидались)\",\n                    attachment_type=allure.attachment_type.JSON\n                )\n>           assert len(created_records) == expected_records_in_db, \\\n                (f\"Ожидалось {expected_records_in_db} записей в 'cdr_record' (из-за невалидного формата secondSubscriberMsisdn), \"\n                 f\"но найдено {len(created_records)}. Записи: {created_records}\")\nE           AssertionError: Ожидалось 0 записей в 'cdr_record' (из-за невалидного формата secondSubscriberMsisdn), но найдено 6. Записи: [{'id': 6, 'msisdn_one': '79334455667', 'msisdn_two': '', 'type': '01', 'start_time': datetime.datetime(2024, 5, 24, 15, 0), 'in_one_network': False, 'our_subscriber_id': 3, 'lasts': 300000000000}, {'id': 5, 'msisdn_one': '79996667755', 'msisdn_two': '7988111223A', 'type': '02', 'start_time': datetime.datetime(2024, 5, 24, 14, 0), 'in_one_network': False, 'our_subscriber_id': 2, 'lasts': 300000000000}, {'id': 4, 'msisdn_one': '79123456789', 'msisdn_two': 'ABCDEFGHIJK', 'type': '01', 'start_time': datetime.datetime(2024, 5, 24, 13, 0), 'in_one_network': False, 'our_subscriber_id': 1, 'lasts': 300000000000}, {'id': 3, 'msisdn_one': '79334455667', 'msisdn_two': '798877788990', 'type': '02', 'start_time': datetime.datetime(2024, 5, 24, 12, 0), 'in_one_network': False, 'our_subscriber_id': 3, 'lasts': 300000000000}, {'id': 2, 'msisdn_one': '79996667755', 'msisdn_two': '7988444556', 'type': '01', 'start_time': datetime.datetime(2024, 5, 24, 11, 0), 'in_one_network': False, 'our_subscriber_id': 2, 'lasts': 300000000000}, {'id': 1, 'msisdn_one': '79123456789', 'msisdn_two': '89881112233', 'type': '02', 'start_time': datetime.datetime(2024, 5, 24, 10, 0), 'in_one_network': False, 'our_subscriber_id': 1, 'lasts': 300000000000}]\nE           assert 6 == 0\nE            +  where 6 = len([{'id': 6, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79334455667', ...}, {'id': 5, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79996667755', ...}, {'id': 4, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79123456789', ...}, {'id': 3, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79334455667', ...}, {'id': 2, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79996667755', ...}, {'id': 1, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79123456789', ...}])\n\ntests/test_invalid_second_msisdn.py:102: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"db_connection","time":{"start":1746967615175,"stop":1746967615211,"duration":36},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяет, что BRT-сервис НЕ сохраняет CDR в 'cdr_record', если 'secondSubscriberMsisdn' имеет невалидный формат. Используется файл: test_data/invalid_format_second_msisdn.jsonl. Ожидается 0 записей в БД.","status":"failed","statusMessage":"AssertionError: Ожидалось 0 записей в 'cdr_record' (из-за невалидного формата secondSubscriberMsisdn), но найдено 6. Записи: [{'id': 6, 'msisdn_one': '79334455667', 'msisdn_two': '', 'type': '01', 'start_time': datetime.datetime(2024, 5, 24, 15, 0), 'in_one_network': False, 'our_subscriber_id': 3, 'lasts': 300000000000}, {'id': 5, 'msisdn_one': '79996667755', 'msisdn_two': '7988111223A', 'type': '02', 'start_time': datetime.datetime(2024, 5, 24, 14, 0), 'in_one_network': False, 'our_subscriber_id': 2, 'lasts': 300000000000}, {'id': 4, 'msisdn_one': '79123456789', 'msisdn_two': 'ABCDEFGHIJK', 'type': '01', 'start_time': datetime.datetime(2024, 5, 24, 13, 0), 'in_one_network': False, 'our_subscriber_id': 1, 'lasts': 300000000000}, {'id': 3, 'msisdn_one': '79334455667', 'msisdn_two': '798877788990', 'type': '02', 'start_time': datetime.datetime(2024, 5, 24, 12, 0), 'in_one_network': False, 'our_subscriber_id': 3, 'lasts': 300000000000}, {'id': 2, 'msisdn_one': '79996667755', 'msisdn_two': '7988444556', 'type': '01', 'start_time': datetime.datetime(2024, 5, 24, 11, 0), 'in_one_network': False, 'our_subscriber_id': 2, 'lasts': 300000000000}, {'id': 1, 'msisdn_one': '79123456789', 'msisdn_two': '89881112233', 'type': '02', 'start_time': datetime.datetime(2024, 5, 24, 10, 0), 'in_one_network': False, 'our_subscriber_id': 1, 'lasts': 300000000000}]\nassert 6 == 0\n +  where 6 = len([{'id': 6, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79334455667', ...}, {'id': 5, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79996667755', ...}, {'id': 4, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79123456789', ...}, {'id': 3, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79334455667', ...}, {'id': 2, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79996667755', ...}, {'id': 1, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79123456789', ...}])","statusTrace":"db_connection = <psycopg.Connection [INTRANS] (host=localhost user=postgres database=brt) at 0x7fcc1094eb10>\n\n    @allure.epic(\"Обработка CDR в BRT\")\n    @allure.feature(\"Негативные сценарии - Валидация данных\")\n    @allure.story(\"Отклонение CDR с невалидным форматом secondSubscriberMsisdn\")\n    @allure.title(\"Тест: BRT отклоняет CDR с невалидным форматом secondSubscriberMsisdn\")\n    @allure.description(\n        f\"Проверяет, что BRT-сервис НЕ сохраняет CDR в 'cdr_record', если 'secondSubscriberMsisdn' имеет невалидный формат. \"\n        f\"Используется файл: {INVALID_FORMAT_SECOND_MSISDN_FILE}. Ожидается 0 записей в БД.\"\n    )\n    @allure.severity(allure.severity_level.CRITICAL) # Валидация идентификаторов абонентов критична\n    def test_brt_rejects_cdr_with_invalid_format_second_msisdn(\n        db_connection: psycopg.Connection\n    ):\n        \"\"\"\n        Проверяет, что BRT-сервис НЕ сохраняет CDR в 'cdr_record',\n        если 'secondSubscriberMsisdn' имеет невалидный формат.\n        firstSubscriberMsisdn, callType и даты предполагаются валидными.\n        Ожидается 0 записей в БД.\n        Тест полагается на корректность данных в тестовом файле.\n        \"\"\"\n        test_file_path = INVALID_FORMAT_SECOND_MSISDN_FILE\n        logger.info(f\"--- Тест: BRT должен отбросить CDR из {test_file_path} (невалидный формат secondSubscriberMsisdn) ---\")\n    \n        with allure.step(f\"1. Подготовка БД: создание/проверка абонентов {list(FIRST_MSISDNS_TO_PREPARE)} и очистка cdr_record\"):\n            msisdns_to_prepare_in_db = list(FIRST_MSISDNS_TO_PREPARE)\n            logger.info(f\"Подготовка БД: создание абонентов {msisdns_to_prepare_in_db} и очистка cdr_record...\")\n            subscriber_ids = prepare_database_for_cdr_test(db_connection, msisdns_to_prepare_in_db)\n            allure.attach(\n                json.dumps(subscriber_ids, indent=2, ensure_ascii=False),\n                name=\"ID подготовленных/проверенных абонентов\",\n                attachment_type=allure.attachment_type.JSON\n            )\n            logger.info(f\"БД подготовлена (только указанные firstSubscriberMsisdn). ID абонентов: {subscriber_ids}\")\n    \n        with allure.step(f\"2. Чтение CDR с невалидным secondSubscriberMsisdn из файла: {test_file_path}\"):\n            logger.info(f\"Чтение CDR из файла: {test_file_path}\")\n            cdr_list_to_send = read_cdr_file(test_file_path)\n            allure.attach(\n                json.dumps(cdr_list_to_send, indent=2, ensure_ascii=False),\n                name=f\"Содержимое файла {test_file_path} (с невалидным secondSubscriberMsisdn)\",\n                attachment_type=allure.attachment_type.JSON\n            )\n            assert cdr_list_to_send, f\"Тестовый файл {test_file_path} пуст или не найден.\"\n            logger.info(f\"Прочитано {len(cdr_list_to_send)} CDR для отправки (предполагается, что все с невалидным форматом secondSubscriberMsisdn).\")\n    \n        expected_records_in_db = 0\n        allure.attach(\n            str(expected_records_in_db),\n            name=\"Ожидаемое количество записей в БД после обработки\",\n            attachment_type=allure.attachment_type.TEXT\n        )\n    \n        with allure.step(f\"3. Отправка {len(cdr_list_to_send)} CDR (с невалидным secondSubscriberMsisdn) в RabbitMQ\"):\n            logger.info(f\"Отправка {len(cdr_list_to_send)} CDR в RabbitMQ...\")\n            allure.attach(\n                json.dumps(cdr_list_to_send, indent=2, ensure_ascii=False),\n                name=\"CDRы (с невалидным secondSubscriberMsisdn), отправленные в RabbitMQ\",\n                attachment_type=allure.attachment_type.JSON\n            )\n            send_status = send_cdr_list_to_rabbitmq(cdr_list_to_send)\n            assert send_status, \"Не удалось отправить CDR в RabbitMQ.\"\n    \n        processing_time_seconds = 5\n        with allure.step(f\"4. Ожидание {processing_time_seconds} сек. для обработки CDR сервисом BRT\"):\n            logger.info(f\"Ожидание {processing_time_seconds} сек. для обработки BRT...\")\n            time.sleep(processing_time_seconds)\n    \n        with allure.step(f\"5. Проверка отсутствия записей в таблице cdr_record (ожидается: {expected_records_in_db})\"):\n            logger.info(\"Получение записей из cdr_record...\")\n            created_records = get_cdr_records(db_connection, limit=len(cdr_list_to_send) + 5)\n            logger.info(f\"Фактически найдено в cdr_record: {len(created_records)}.\")\n    \n            allure.attach(\n                f\"Ожидалось записей: {expected_records_in_db}\\n\"\n                f\"Фактически найдено записей: {len(created_records)}\",\n                name=\"Сводка по записям в БД\",\n                attachment_type=allure.attachment_type.TEXT\n            )\n            if created_records: # Прикрепляем только если что-то неожиданно нашлось\n                allure.attach(\n                    json.dumps(created_records, indent=2, ensure_ascii=False, default=str),\n                    name=\"Записи, полученные из cdr_record (не ожидались)\",\n                    attachment_type=allure.attachment_type.JSON\n                )\n>           assert len(created_records) == expected_records_in_db, \\\n                (f\"Ожидалось {expected_records_in_db} записей в 'cdr_record' (из-за невалидного формата secondSubscriberMsisdn), \"\n                 f\"но найдено {len(created_records)}. Записи: {created_records}\")\nE           AssertionError: Ожидалось 0 записей в 'cdr_record' (из-за невалидного формата secondSubscriberMsisdn), но найдено 6. Записи: [{'id': 6, 'msisdn_one': '79334455667', 'msisdn_two': '', 'type': '01', 'start_time': datetime.datetime(2024, 5, 24, 15, 0), 'in_one_network': False, 'our_subscriber_id': 3, 'lasts': 300000000000}, {'id': 5, 'msisdn_one': '79996667755', 'msisdn_two': '7988111223A', 'type': '02', 'start_time': datetime.datetime(2024, 5, 24, 14, 0), 'in_one_network': False, 'our_subscriber_id': 2, 'lasts': 300000000000}, {'id': 4, 'msisdn_one': '79123456789', 'msisdn_two': 'ABCDEFGHIJK', 'type': '01', 'start_time': datetime.datetime(2024, 5, 24, 13, 0), 'in_one_network': False, 'our_subscriber_id': 1, 'lasts': 300000000000}, {'id': 3, 'msisdn_one': '79334455667', 'msisdn_two': '798877788990', 'type': '02', 'start_time': datetime.datetime(2024, 5, 24, 12, 0), 'in_one_network': False, 'our_subscriber_id': 3, 'lasts': 300000000000}, {'id': 2, 'msisdn_one': '79996667755', 'msisdn_two': '7988444556', 'type': '01', 'start_time': datetime.datetime(2024, 5, 24, 11, 0), 'in_one_network': False, 'our_subscriber_id': 2, 'lasts': 300000000000}, {'id': 1, 'msisdn_one': '79123456789', 'msisdn_two': '89881112233', 'type': '02', 'start_time': datetime.datetime(2024, 5, 24, 10, 0), 'in_one_network': False, 'our_subscriber_id': 1, 'lasts': 300000000000}]\nE           assert 6 == 0\nE            +  where 6 = len([{'id': 6, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79334455667', ...}, {'id': 5, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79996667755', ...}, {'id': 4, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79123456789', ...}, {'id': 3, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79334455667', ...}, {'id': 2, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79996667755', ...}, {'id': 1, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79123456789', ...}])\n\ntests/test_invalid_second_msisdn.py:102: AssertionError","steps":[{"name":"1. Подготовка БД: создание/проверка абонентов ['79996667755', '79334455667', '79123456789'] и очистка cdr_record","time":{"start":1746967615212,"stop":1746967615225,"duration":13},"status":"passed","steps":[],"attachments":[{"uid":"ca76c843b65d358d","name":"ID подготовленных/проверенных абонентов","source":"ca76c843b65d358d.json","type":"application/json","size":62}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},{"name":"2. Чтение CDR с невалидным secondSubscriberMsisdn из файла: test_data/invalid_format_second_msisdn.jsonl","time":{"start":1746967615225,"stop":1746967615226,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"a00e1edc6bea366c","name":"Содержимое файла test_data/invalid_format_second_msisdn.jsonl (с невалидным secondSubscriberMsisdn)","source":"a00e1edc6bea366c.json","type":"application/json","size":1173}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},{"name":"3. Отправка 6 CDR (с невалидным secondSubscriberMsisdn) в RabbitMQ","time":{"start":1746967615227,"stop":1746967615234,"duration":7},"status":"passed","steps":[],"attachments":[{"uid":"3bceada094896bbd","name":"CDRы (с невалидным secondSubscriberMsisdn), отправленные в RabbitMQ","source":"3bceada094896bbd.json","type":"application/json","size":1173}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},{"name":"4. Ожидание 5 сек. для обработки CDR сервисом BRT","time":{"start":1746967615234,"stop":1746967620235,"duration":5001},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"5. Проверка отсутствия записей в таблице cdr_record (ожидается: 0)","time":{"start":1746967620235,"stop":1746967620244,"duration":9},"status":"failed","statusMessage":"AssertionError: Ожидалось 0 записей в 'cdr_record' (из-за невалидного формата secondSubscriberMsisdn), но найдено 6. Записи: [{'id': 6, 'msisdn_one': '79334455667', 'msisdn_two': '', 'type': '01', 'start_time': datetime.datetime(2024, 5, 24, 15, 0), 'in_one_network': False, 'our_subscriber_id': 3, 'lasts': 300000000000}, {'id': 5, 'msisdn_one': '79996667755', 'msisdn_two': '7988111223A', 'type': '02', 'start_time': datetime.datetime(2024, 5, 24, 14, 0), 'in_one_network': False, 'our_subscriber_id': 2, 'lasts': 300000000000}, {'id': 4, 'msisdn_one': '79123456789', 'msisdn_two': 'ABCDEFGHIJK', 'type': '01', 'start_time': datetime.datetime(2024, 5, 24, 13, 0), 'in_one_network': False, 'our_subscriber_id': 1, 'lasts': 300000000000}, {'id': 3, 'msisdn_one': '79334455667', 'msisdn_two': '798877788990', 'type': '02', 'start_time': datetime.datetime(2024, 5, 24, 12, 0), 'in_one_network': False, 'our_subscriber_id': 3, 'lasts': 300000000000}, {'id': 2, 'msisdn_one': '79996667755', 'msisdn_two': '7988444556', 'type': '01', 'start_time': datetime.datetime(2024, 5, 24, 11, 0), 'in_one_network': False, 'our_subscriber_id': 2, 'lasts': 300000000000}, {'id': 1, 'msisdn_one': '79123456789', 'msisdn_two': '89881112233', 'type': '02', 'start_time': datetime.datetime(2024, 5, 24, 10, 0), 'in_one_network': False, 'our_subscriber_id': 1, 'lasts': 300000000000}]\nassert 6 == 0\n +  where 6 = len([{'id': 6, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79334455667', ...}, {'id': 5, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79996667755', ...}, {'id': 4, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79123456789', ...}, {'id': 3, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79334455667', ...}, {'id': 2, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79996667755', ...}, {'id': 1, 'in_one_network': False, 'lasts': 300000000000, 'msisdn_one': '79123456789', ...}])\n","statusTrace":"  File \"/home/imenov/nexign/auto_tests/baby-billing/auto-tests/brt_test_cdr/tests/test_invalid_second_msisdn.py\", line 102, in test_brt_rejects_cdr_with_invalid_format_second_msisdn\n    assert len(created_records) == expected_records_in_db, \\\n        (f\"Ожидалось {expected_records_in_db} записей в 'cdr_record' (из-за невалидного формата secondSubscriberMsisdn), \"\n         f\"но найдено {len(created_records)}. Записи: {created_records}\")\n","steps":[],"attachments":[{"uid":"fa889e9101b6cbaa","name":"Сводка по записям в БД","source":"fa889e9101b6cbaa.txt","type":"text/plain","size":90},{"uid":"a7d7dbec35e5497d","name":"Записи, полученные из cdr_record (не ожидались)","source":"a7d7dbec35e5497d.json","type":"application/json","size":1371}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"cb23683c9589afd4","name":"Ожидаемое количество записей в БД после обработки","source":"cb23683c9589afd4.txt","type":"text/plain","size":1},{"uid":"b0a23995fe448724","name":"log","source":"b0a23995fe448724.txt","type":"text/plain","size":5384},{"uid":"c37e840c50cf2384","name":"stderr","source":"c37e840c50cf2384.txt","type":"text/plain","size":5161}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":8,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"db_connection::0","time":{"start":1746967620270,"stop":1746967620274,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"Отклонение CDR с невалидным форматом secondSubscriberMsisdn"},{"name":"feature","value":"Негативные сценарии - Валидация данных"},{"name":"epic","value":"Обработка CDR в BRT"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_invalid_second_msisdn"},{"name":"host","value":"imenov"},{"name":"thread","value":"32580-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_invalid_second_msisdn"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"48c9f907eedb6993.json","parameterValues":[]}