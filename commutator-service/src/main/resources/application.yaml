spring:
  application:
    name: commutator-service
  datasource:
    url: ${H2_URL}
    driverClassName: org.h2.Driver
    username: ${H2_USERNAME}
    password: ${H2_PASSWORD}
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: none
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
  rabbitmq:
    host: ${RABBIT_HOST}
    port: ${RABBIT_PORT}
    username: ${RABBIT_USERNAME}
    password: ${RABBIT_PASSWORD}
  cloud:
    function:
      definition: rabbitCDRSender;callRestrictionRequestConsumer;newSubscriberRequestConsumer
    stream:
      bindings:
        rabbitCDRSender-out-0:
          destination: cdr-exchange
          content-type: application/json
        callRestrictionRequestConsumer-in-0:
          destination: call-restriction-request-exchange
          content-type: application/json
          group: call-restriction-group
          consumer:
            max-attempts: 3
        newSubscriberRequestConsumer-in-0:
          destination: new-subscriber-request-exchange
          content-type: application/json
          group: new-subscriber-group
          consumer:
            max-attempts: 3
      rabbit:
        bindings:
          rabbitCDRSender-out-0:
            producer:
              routing-key-expression: '"cdr-routing-key"'
              auto-bind-dlq: true
              dlq-ttl: 5000
          callRestrictionRequestConsumer-in-0:
            consumer:
              binding-routing-key: call-restriction-request-key
              auto-bind-dlq: true
              dlq-ttl: 5000
          newSubscriberRequestConsumer-in-0:
            consumer:
              binding-routing-key: new-subscriber-request-key
              auto-bind-dlq: true
              dlq-ttl: 5000

eureka:
  client:
    service-url:
      defaultZone: http://${EUREKA_HOST}:${EUREKA_PORT}/eureka/
  instance:
    prefer-ip-address: true

server:
  port: 8081